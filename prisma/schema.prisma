// Prisma schema file generated from Supabase database introspection
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id         String   @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  email      String   @unique @db.VarChar
  role       String   @default("admin") @db.VarChar
  name       String?  @db.VarChar
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)

  // Relations
  teachers               teachers?
  recovery_types         recovery_types[]
  recovery_activities    recovery_activities[] @relation("created_by")
  recovery_approvals     recovery_activities[] @relation("approved_by")
  activity_logs          activity_logs[]
  system_configs         system_configs[]
}

model teachers {
  id         String   @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  cognome    String   @db.VarChar
  nome       String   @db.VarChar
  email      String?  @unique @db.VarChar
  user_id    String?  @unique @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)

  // Relations
  user                users?               @relation(fields: [user_id], references: [id])
  teacher_budgets     teacher_budgets[]
  recovery_activities recovery_activities[]
}

model school_years {
  id          String   @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  name        String   @unique @db.VarChar
  start_date  DateTime @db.Timestamptz(6)
  end_date    DateTime @db.Timestamptz(6)
  is_active   Boolean? @default(false)
  weeks_count Int      @db.Integer
  created_at  DateTime? @default(now()) @db.Timestamptz(6)

  // Relations
  teacher_budgets     teacher_budgets[]
  recovery_activities recovery_activities[]
}

model teacher_budgets {
  id              String   @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  teacher_id      String   @db.Uuid
  school_year_id  String   @db.Uuid
  minutes_weekly  Int      @db.Integer
  minutes_annual  Int      @db.Integer
  modules_annual  Int      @db.Integer
  minutes_used    Int?     @default(0) @db.Integer
  modules_used    Int?     @default(0) @db.Integer
  import_date     DateTime @db.Timestamptz(6)
  import_source   String   @db.VarChar
  created_at      DateTime? @default(now()) @db.Timestamptz(6)

  // Relations
  teacher      teachers      @relation(fields: [teacher_id], references: [id])
  school_year  school_years  @relation(fields: [school_year_id], references: [id])

  @@unique([teacher_id, school_year_id])
}

model recovery_types {
  id                String   @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  name              String   @unique @db.VarChar
  description       String?  @db.Text
  color             String?  @default("#3B82F6") @db.VarChar
  is_active         Boolean? @default(true)
  requires_approval Boolean? @default(false)
  default_duration  Int      @db.Integer
  created_by        String   @db.Uuid
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  updated_at        DateTime? @default(now()) @db.Timestamptz(6)

  // Relations
  creator             users                   @relation(fields: [created_by], references: [id])
  recovery_activities recovery_activities[]
}

model recovery_activities {
  id                 String   @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  teacher_id         String   @db.Uuid
  school_year_id     String   @db.Uuid
  recovery_type_id   String   @db.Uuid
  date               DateTime @db.Timestamptz(6)
  duration_minutes   Int      @db.Integer
  modules_equivalent Int      @db.Integer
  title              String   @db.VarChar
  description        String?  @db.Text
  status             String?  @default("completed") @db.VarChar
  created_by         String   @db.Uuid
  approved_by        String?  @db.Uuid
  approved_at        DateTime? @db.Timestamptz(6)
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)

  // Relations
  teacher       teachers        @relation(fields: [teacher_id], references: [id])
  school_year   school_years    @relation(fields: [school_year_id], references: [id])
  recovery_type recovery_types  @relation(fields: [recovery_type_id], references: [id])
  creator       users           @relation("created_by", fields: [created_by], references: [id])
  approver      users?          @relation("approved_by", fields: [approved_by], references: [id])
}

model activity_logs {
  id         String   @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  user_id    String   @db.Uuid
  action     String   @db.VarChar
  table_name String   @db.VarChar
  record_id  String?  @db.Uuid
  old_values Json?    @db.JsonB
  new_values Json?    @db.JsonB
  ip_address String?  @db.VarChar
  user_agent String?  @db.Text
  created_at DateTime? @default(now()) @db.Timestamptz(6)

  // Relations
  user users @relation(fields: [user_id], references: [id])
}

model system_configs {
  id          String   @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  key         String   @unique @db.VarChar
  value       String   @db.Text
  description String?  @db.Text
  updated_by  String   @db.Uuid
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)

  // Relations
  updater users @relation(fields: [updated_by], references: [id])
}